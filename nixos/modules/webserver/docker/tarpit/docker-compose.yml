version: '3.5'
services:

  endlessh:
    container_name: endlessh
    image: shizunge/endlessh-go:latest
    restart: always
    command:
      - -interval_ms=1000
      - -logtostderr
      - -v=1
      - -enable_prometheus
      - -geoip_supplier=ip-api
    networks:
      proxy:
        ipv4_address: 172.40.0.20
    ports:
      - 2222:2222 # SSH port
      - 127.0.0.1:2112:2112 # Prometheus metrics port

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-SSH
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=45d
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --web.enable-admin-api
    networks:
      proxy:
        ipv4_address: 172.40.0.21
    ports:
      - 127.0.0.1:9090:9090
    dns:
      - 1.1.1.1
      - 8.8.8.8
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-SSH
    restart: always
    networks:
      proxy:
        ipv4_address: 172.40.0.22
    dns:
      - 1.1.1.1
      - 8.8.8.8
    env_file:
      - grafana.env
      - ../../secret.env
    volumes:
      - grafana_var:/var/lib/grafana/
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml
    labels:
      traefik.docker.network: proxy
      traefik.enable: "true"
      traefik.http.routers.grafana-secure.entrypoints: websecure
      traefik.http.routers.grafana-secure.middlewares: default@file
      traefik.http.routers.grafana-secure.rule: Host(`grafana.${DOMAIN}`)
      traefik.http.routers.grafana-secure.service: grafana
      traefik.http.routers.grafana-secure.tls: "true"
      traefik.http.routers.grafana-secure.tls.certresolver: http_resolver
      traefik.http.routers.grafana.entrypoints: web
      traefik.http.routers.grafana.rule: Host(`grafana.${DOMAIN}`)
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
networks:
  proxy:
    external: true


volumes:
  prometheus:
  grafana_var:
